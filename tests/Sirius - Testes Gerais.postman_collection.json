{
	"variables": [],
	"info": {
		"name": "Sirius - Testes Gerais",
		"_postman_id": "b712de06-f3a9-5bfc-ff25-069e232becaa",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Autenticacao",
			"description": "",
			"item": [
				{
					"name": "1 - autenticar",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var _token = pm.response.headers.get(\"token\");",
									"",
									"pm.environment.set(\"token\", _token);",
									"",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								]
							}
						}
					],
					"request": {
						"url": "{{url}}/sirius/{{versao}}/autenticar",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "login",
									"type": "text",
									"value": "{{username}}"
								},
								{
									"key": "senha",
									"type": "text",
									"value": "{{password}}"
								}
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Controladoria",
			"description": "",
			"item": [
				{
					"name": "Qualificadores",
					"description": "",
					"item": [
						{
							"name": "autenticar",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _token = pm.response.headers.get(\"token\");",
											"",
											"pm.environment.set(\"token\", _token);",
											"",
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/autenticar",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "login",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "senha",
											"type": "text",
											"value": "{{password}}"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "1 - produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"heineken\"",
											"    }",
											"",
											"pm.environment.set(\"json_produto\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_produto\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_produto}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "2 - ponto de movimentacao",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"loja\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "3 - produto ao ponto de movimentacao",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}",
								"method": "LINK",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "4 - qualificador temporal para pdm (em lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json.push(",
											"    {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"Qualificador\",",
											"      \"tipo_valor\":\"numerico\",",
											"      \"tipo_qualificador\":\"temporal\",",
											"      \"metodo_preenchimento\":\"preencher_com_ultimo\",",
											"      \"valor\":\"20\"",
											"    }",
											"",
											")",
											"",
											"pm.environment.set(\"json_pdm_qualificador_temp\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm_qualificador_temp\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm_qualificador_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "5 - qualificador atemporal para pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"Qualificador\",",
											"      \"tipo_valor\":\"numerico\",",
											"      \"tipo_qualificador\":\"atemporal\",",
											"      \"metodo_preenchimento\":\"preencher_com_ultimo\",",
											"      \"valor\":\"20\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm_qualificador_atemp\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm_qualificador_atemp\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm_qualificador_atemp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "6 - qualificador temporal para prod (em lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json.push(",
											"    {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"Qualificador\",",
											"      \"tipo_valor\":\"numerico\",",
											"      \"tipo_qualificador\":\"temporal\",",
											"      \"metodo_preenchimento\":\"preencher_com_ultimo\",",
											"      \"valor\":\"20\"",
											"    }",
											"",
											")",
											"",
											"pm.environment.set(\"json_prod_qualificador_temp\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_prod_qualificador_temp\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_prod_qualificador_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "7 - qualificador atemporal para portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"Qualificador\",",
											"      \"tipo_valor\":\"numerico\",",
											"      \"tipo_qualificador\":\"atemporal\",",
											"      \"metodo_preenchimento\":\"preencher_com_ultimo\",",
											"      \"valor\":\"20\"",
											"    }",
											"",
											"pm.environment.set(\"json_prod_qualificador_atemp\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_prod_qualificador_atemp\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_prod_qualificador_atemp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "8 - qualificador temporal para portfolio (em lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json.push(",
											"    {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"Qualificador\",",
											"      \"tipo_valor\":\"numerico\",",
											"      \"tipo_qualificador\":\"temporal\",",
											"      \"metodo_preenchimento\":\"preencher_com_ultimo\",",
											"      \"valor\":\"20\"",
											"    }",
											"",
											")",
											"",
											"pm.environment.set(\"json_port_qualificador_temp\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_port_qualificador_temp\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_port_qualificador_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "9 - qualificador atemporal para portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"Qualificador\",",
											"      \"tipo_valor\":\"numerico\",",
											"      \"tipo_qualificador\":\"atemporal\",",
											"      \"metodo_preenchimento\":\"preencher_com_ultimo\",",
											"      \"valor\":\"20\"",
											"    }",
											"",
											"pm.environment.set(\"json_port_qualificador_atemp\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_port_qualificador_atemp\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_port_qualificador_atemp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "10 - qualificador temporal no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"",
											"_json = {",
											"      \"nome\":\"Qualificador atualizado\",",
											"      \"metodo_preenchimento\":\"indefinido\",",
											"      \"valor\":\"30\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm_qualificador_temp\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_temp}}",
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm_qualificador_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "11 - qualificador temporal no produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"",
											"_json = {",
											"      \"nome\":\"Qualificador atualizado\",",
											"      \"metodo_preenchimento\":\"indefinido\",",
											"      \"valor\":\"30\"",
											"    }",
											"",
											"pm.environment.set(\"json_prod_qualificador_temp\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_temp}}",
								"method": "PUT",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_prod_qualificador_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "12 - qualificador temporal no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"",
											"_json = {",
											"      \"nome\":\"Qualificador atualizado\",",
											"      \"metodo_preenchimento\":\"indefinido\",",
											"      \"valor\":\"30\"",
											"    }",
											"",
											"pm.environment.set(\"json_port_qualificador_temp\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_temp}}",
								"method": "PUT",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_port_qualificador_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "13 - pegar qualificador temporal no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_temp}}",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "14 - pegar qualificador temporal no produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_temp}}",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_prod_qualificador_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "15 - pegar qualificador temporal no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_temp}}",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "16 - listar qualificadores temporais no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "17 - listar qualificadores temporais no produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_prod_qualificador_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "18 - listar qualificadores temporais no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - item qualificador temporal para pdm (em lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json.push(",
											"    {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"valor\":\"200\",",
											"      \"data_observacao\":\"2018-01-01\"",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_pdm_item_qlf_temp\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm_item_qlf_temp\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_temp}}/itens",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm_item_qlf_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "20 - item qualificador temporal para prod (em lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json.push(",
											"    {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"valor\":\"200\",",
											"      \"data_observacao\":\"2018-01-01\"",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_prod_item_qlf_temp\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_prod_item_qlf_temp\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_temp}}/itens",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_prod_item_qlf_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - item qualificador temporal para portfolio (em lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json.push(",
											"    {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"valor\":\"200\",",
											"      \"data_observacao\":\"2018-01-01\"",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_port_item_qlf_temp\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_port_item_qlf_temp\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_temp}}/itens",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_port_item_qlf_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - item qualificador temporal no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"",
											"_json = {",
											"      \"valor\":\"450\",",
											"      \"data_observacao\":\"2020-02-02\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm_item_qlf_temp\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_temp}}/itens/{{codigo_externo_pdm_item_qlf_temp}}",
								"method": "PUT",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm_item_qlf_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - item qualificador temporal no prod",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"",
											"_json = {",
											"      \"valor\":\"450\",",
											"      \"data_observacao\":\"2020-02-02\"",
											"    }",
											"",
											"pm.environment.set(\"json_prod_item_qlf_temp\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_temp}}/itens/{{codigo_externo_prod_item_qlf_temp}}",
								"method": "PUT",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_prod_item_qlf_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - item qualificador temporal no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"",
											"_json = {",
											"      \"valor\":\"450\",",
											"      \"data_observacao\":\"2020-02-02\"",
											"    }",
											"",
											"pm.environment.set(\"json_port_item_qlf_temp\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_temp}}/itens/{{codigo_externo_port_item_qlf_temp}}",
								"method": "PUT",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_port_item_qlf_temp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - pegar item qualificador temporal no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_temp}}/itens/{{codigo_externo_pdm_item_qlf_temp}}",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - pegar item qualificador temporal no prod",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_temp}}/itens/{{codigo_externo_prod_item_qlf_temp}}",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "27 - pegar item qualificador temporal no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_temp}}/itens/{{codigo_externo_port_item_qlf_temp}}",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "28 - listar itens qualificadores temporais no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_temp}}/itens",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "29 - listar itens qualificadores temporais no prod",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_temp}}/itens",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "30 - listar itens qualificadores temporais no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_temp}}/itens",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "31 - item qualificador atemporal para pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"valor\":\"200\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm_item_qlf_atemp\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm_item_qlf_atemp\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_atemp}}/itens",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm_item_qlf_atemp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "32 - item qualificador atemporal para prod",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"valor\":\"200\"",
											"    }",
											"",
											"pm.environment.set(\"json_prod_item_qlf_atemp\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_prod_item_qlf_atemp\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_atemp}}/itens",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_prod_item_qlf_atemp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "33 - item qualificador atemporal para portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"valor\":\"200\"",
											"    }",
											"",
											"pm.environment.set(\"json_port_item_qlf_atemp\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_port_item_qlf_atemp\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_atemp}}/itens",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_port_item_qlf_atemp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "34 - item qualificador atemporal no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"",
											"_json = {",
											"      \"valor\":\"450\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm_item_qlf_atemp\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_atemp}}/itens/{{codigo_externo_pdm_item_qlf_atemp}}",
								"method": "PUT",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm_item_qlf_atemp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "35 - item qualificador atemporal no prod",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"",
											"_json = {",
											"      \"valor\":\"450\"",
											"    }",
											"",
											"pm.environment.set(\"json_prod_item_qlf_atemp\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_atemp}}/itens/{{codigo_externo_prod_item_qlf_atemp}}",
								"method": "PUT",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_prod_item_qlf_atemp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "36 - item qualificador atemporal no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"",
											"_json = {",
											"      \"valor\":\"450\"",
											"    }",
											"",
											"pm.environment.set(\"json_port_item_qlf_atemp\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_atemp}}/itens/{{codigo_externo_port_item_qlf_atemp}}",
								"method": "PUT",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_port_item_qlf_atemp}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "37 - pegar item qualificador atemporal no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_atemp}}/itens/{{codigo_externo_pdm_item_qlf_atemp}}",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "38 - pegar item qualificador atemporal no prod",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_atemp}}/itens/{{codigo_externo_prod_item_qlf_atemp}}",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "39 - pegar item qualificador atemporal no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_atemp}}/itens/{{codigo_externo_port_item_qlf_atemp}}",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "40 - listar itens qualificadores atemporais no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_atemp}}/itens",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "41 - listar itens qualificadores atemporais no prod",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_atemp}}/itens",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "42 - listar itens qualificadores atemporais no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_atemp}}/itens",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "43 - item qualificador temporal no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_temp}}/itens/{{codigo_externo_pdm_item_qlf_temp}}",
								"method": "DELETE",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "44 - item qualificador temporal no prod",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_temp}}/itens/{{codigo_externo_prod_item_qlf_temp}}",
								"method": "DELETE",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "45 - item qualificador temporal no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_temp}}/itens/{{codigo_externo_port_item_qlf_temp}}",
								"method": "DELETE",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "46 - item qualificador atemporal no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_atemp}}/itens/{{codigo_externo_pdm_item_qlf_atemp}}",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "47 - item qualificador atemporal no prod",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_atemp}}/itens/{{codigo_externo_prod_item_qlf_atemp}}",
								"method": "DELETE",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "48 - item qualificador atemporal no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_atemp}}/itens/{{codigo_externo_port_item_qlf_atemp}}",
								"method": "DELETE",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "49 - qualificador temporal no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_temp}}",
								"method": "DELETE",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "50 - qualificador temporal no prod",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_temp}}",
								"method": "DELETE",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "51 - qualificador temporal no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_temp}}",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "52 - qualificador atemporal no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/qualificadores/{{codigo_externo_pdm_qualificador_atemp}}",
								"method": "DELETE",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "53 - qualificador atemporal no prod",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_prod_qualificador_atemp}}",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "54 - qualificador atemporal no portfolio",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}/qualificadores/{{codigo_externo_port_qualificador_atemp}}",
								"method": "DELETE",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "autenticar",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _token = pm.response.headers.get(\"token\");",
											"",
											"pm.environment.set(\"token\", _token);",
											"",
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/autenticar",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "login",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "senha",
											"type": "text",
											"value": "{{password}}"
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Markting",
			"description": "",
			"item": [
				{
					"name": "Campanhas de markting",
					"description": "",
					"item": [
						{
							"name": "1 - produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"heineken\"",
											"    }",
											"",
											"pm.environment.set(\"json_produto\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_produto\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_produto}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "2 - ponto de movimentacao",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"loja\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "3 - campanha de markting (full)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"var _codigo_externo_pdm = pm.environment.get(\"codigo_externo_pdm\");",
											"",
											"_json = {",
											"        \"codigo_externo\":_codigo_externo,",
											"        \"nome\":\"Simpsons\",",
											"        \"descricao\":\"Mc lanche feliz com surpresas dos Simpsons\",",
											"        \"data_inicio\":\"2018-01-01\",",
											"        \"data_termino\":\"2018-03-20\",",
											"        \"investimento\":0,",
											"        \"pontos_movimentacao\":{",
											"            \"codigo_exerno\":_codigo_externo_pdm",
											"        },",
											"        \"produtos_catalogo\":{",
											"            \"codigo_exerno\":_codigo_externo_produto",
											"        }",
											"    }",
											"",
											"pm.environment.set(\"json_campanha\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_campanha\", _codigo_externo);",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_campanha}}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Marketing",
			"description": "",
			"item": [
				{
					"name": "Campanhas de marketing",
					"description": "",
					"item": [
						{
							"name": "autenticar",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _token = pm.response.headers.get(\"token\");",
											"",
											"pm.environment.set(\"token\", _token);",
											"",
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/autenticar",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "login",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "senha",
											"type": "text",
											"value": "{{password}}"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "1 - produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"heineken\"",
											"    }",
											"",
											"pm.environment.set(\"json_produto\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_produto\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_produto}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "2 - produto 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"heineken\"",
											"    }",
											"",
											"pm.environment.set(\"json_produto\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_produto2\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_produto}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "3 - ponto de movimentacao",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"loja\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "4 - ponto de movimentacao 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"loja\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm2\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "5 - classificacao de campanha (em lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json.push(",
											"    {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"The green drivers\",",
											"      \"descricao\":\"Procuram-se motoristas responsaveis\"",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_classificacao_lote\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_classificacao_lote\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/classificacoes-campanhas",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_classificacao_lote}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "6 - classificacao de campanha",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"The green drivers\",",
											"      \"descricao\":\"Procuram-se motoristas responsaveis\"",
											"    }",
											"",
											"pm.environment.set(\"json_classificacao\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_classificacao\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/classificacoes-campanhas",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_classificacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "7 - classificacao de campanha",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"",
											"_json = {",
											"      \"descricao\":\"Procuram-se motoristas responsaveis - (atualizado)\"",
											"    }",
											"",
											"pm.environment.set(\"json_classificacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/classificacoes-campanhas/{{codigo_externo_classificacao}}",
								"method": "PUT",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_classificacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "8 - classificacao de campanha",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/classificacoes-campanhas/{{codigo_externo_classificacao}}",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "9 - classificacoes de campanhas",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/classificacoes-campanhas",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "10 - campanha de marketing (em lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_pdm = pm.environment.get(\"codigo_externo_pdm\");",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"var _codigo_externo_classificacao = pm.environment.get(\"codigo_externo_classificacao\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\":_codigo_externo,",
											"        \"nome\":\"The green drivers\",",
											"        \"descricao\":\"Procuram-se motoristas responsaveis\",",
											"        \"data_inicio\":\"2018-01-01\",",
											"        \"data_termino\":\"2018-02-01\",",
											"        \"investimento\":10000000.0,",
											"        \"classificacao\":{",
											"            \"codigo_externo\":_codigo_externo_classificacao",
											"        },",
											"        \"pontos_movimentacao\":[",
											"            {",
											"                \"codigo_externo\":_codigo_externo_pdm",
											"            }],",
											"        \"produtos_catalogo\":[",
											"            {",
											"                \"codigo_externo\":_codigo_externo_produto",
											"            }]",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_campanha_lote\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_campanha_lote\", _codigo_externo);",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_campanha_lote}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "11 - campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_pdm = pm.environment.get(\"codigo_externo_pdm\");",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"var _codigo_externo_classificacao = pm.environment.get(\"codigo_externo_classificacao\");",
											"",
											"_json = {",
											"        \"codigo_externo\":_codigo_externo,",
											"        \"nome\":\"The green drivers\",",
											"        \"descricao\":\"Procuram-se motoristas responsaveis\",",
											"        \"data_inicio\":\"2018-01-01\",",
											"        \"data_termino\":\"2018-02-01\",",
											"        \"investimento\":10000000.0,",
											"        \"classificacao\":{",
											"            \"codigo_externo\":_codigo_externo_classificacao",
											"        },",
											"        \"pontos_movimentacao\":[",
											"            {",
											"                \"codigo_externo\":_codigo_externo_pdm",
											"            }],",
											"        \"produtos_catalogo\":[",
											"            {",
											"                \"codigo_externo\":_codigo_externo_produto",
											"            }]",
											"    }",
											"",
											"pm.environment.set(\"json_campanha\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_campanha\", _codigo_externo);",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_campanha}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "12 - campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"",
											"_json = {",
											"        \"data_inicio\":\"2018-02-01\",",
											"        \"data_termino\":\"2018-02-20\",",
											"        \"investimento\":33340000.20",
											"    }",
											"",
											"pm.environment.set(\"json_campanha\", JSON.stringify(_json));",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}",
								"method": "PUT",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_campanha}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "13 - campanhas de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "14 - campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "15 - classificacao na campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo_classificacao = pm.environment.get(\"codigo_externo_classificacao\");",
											"",
											"_json = {",
											"        \"classificacao\":{",
											"            \"codigo_externo\":_codigo_externo_classificacao",
											"        }",
											"    }",
											"",
											"pm.environment.set(\"json_campanha\", JSON.stringify(_json));",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}",
								"method": "PUT",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_campanha}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "16 - produto na campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}/produtos/{{codigo_externo_produto2}}",
								"method": "LINK",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "17 - produtos na campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}/produtos/{{codigo_externo_produto2}}",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "18 - produto na campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}/produtos/{{codigo_externo_produto2}}",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - ponto de movimentacao na campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}/pontos-movimentacao/{{codigo_externo_pdm2}}",
								"method": "LINK",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "20 - pontos de movimentacao na campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}/pontos-movimentacao",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - ponto de movimentacao na campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}/pontos-movimentacao/{{codigo_externo_pdm2}}",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - ponto de movimentacao na campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}/pontos-movimentacao/{{codigo_externo_pdm2}}",
								"method": "UNLINK",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - produto na campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}/produtos/{{codigo_externo_produto2}}",
								"method": "UNLINK",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - classificacao na campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}/classificacoes-campanhas",
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - campanha de marketing",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha}}",
								"method": "DELETE",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - campanha de marketing lote",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/campanhas-marketing/{{codigo_externo_campanha_lote}}",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "27 - classificacao de campanha",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/classificacoes-campanhas/{{codigo_externo_classificacao}}",
								"method": "DELETE",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "28 - classificacao de campanha lote",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/classificacoes-campanhas/{{codigo_externo_classificacao_lote}}",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Logistica",
			"description": "",
			"item": [
				{
					"name": "Cadernos",
					"description": "",
					"item": [
						{
							"name": "autenticar",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _token = pm.response.headers.get(\"token\");",
											"",
											"pm.environment.set(\"token\", _token);",
											"",
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/autenticar",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "login",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "senha",
											"type": "text",
											"value": "{{password}}"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "1 - produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"heineken\"",
											"    }",
											"",
											"pm.environment.set(\"json_produto\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_produto\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_produto}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "2 - ponto de movimentacao",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"loja\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "3 - produto no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/produtos/{{codigo_externo_produto}}",
								"method": "LINK",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "4 - transferencias (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-transferencias",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "5 - vendas (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-vendas",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "6 - recebimentos (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-recebimentos",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "7 - fechamentos estoque (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-fechamentos",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "8 - ajustes (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-ajustes",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "9 - perdas (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-perdas",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "10 - pendencias (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-pendencias",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "11 - transferencias (range datas)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-transferencias/2018-01-01/2018-02-15",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "12 - vendas (range datas)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-vendas/2018-01-01/2018-02-15",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "13 - recebimentos (range datas)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-recebimentos/2018-01-01/2018-02-15",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "14 - fechamentos estoque (range datas)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-fechamentos/2018-01-01/2018-02-15",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "15 - ajustes (range datas)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-ajustes/2018-01-01/2018-02-15",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "16 - perdas (range datas)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-perdas/2018-01-01/2018-02-15",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "17 - pendencias (range datas)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm}}/caderno-pendencias/2018-01-01/2018-02-15",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Materiais",
			"description": "",
			"item": [
				{
					"name": "Produtos",
					"description": "",
					"item": [
						{
							"name": "autenticar",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _token = pm.response.headers.get(\"token\");",
											"",
											"pm.environment.set(\"token\", _token);",
											"",
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/autenticar",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "login",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "senha",
											"type": "text",
											"value": "{{password}}"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "1 - produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"heineken\",",
											"      \"estoque_minimo\":12.2,",
											"      \"estoque_maximo\":21.3",
											"    }",
											"",
											"pm.environment.set(\"json_produto\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_produto\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_produto}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "2 - produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"",
											"_json = {",
											"      \"estoque_minimo\":15.02,",
											"      \"estoque_maximo\":23.302",
											"    }",
											"",
											"pm.environment.set(\"json_produto\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}",
								"method": "PUT",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_produto}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "3 - produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "4 - produtos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "5 - produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos/{{codigo_externo_produto}}",
								"method": "DELETE",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Parametros de consulta",
			"description": "",
			"item": [
				{
					"name": "Abastecimento",
					"description": "",
					"item": [
						{
							"name": "autenticar",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _token = pm.response.headers.get(\"token\");",
											"",
											"pm.environment.set(\"token\", _token);",
											"",
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/autenticar",
								"method": "POST",
								"header": [
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "login",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "senha",
											"type": "text",
											"value": "{{password}}"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "1 - produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null;",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString();",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"heineken\",",
											"      \"estoque_minimo\":12.2,",
											"      \"estoque_maximo\":21.3",
											"    }",
											"",
											"pm.environment.set(\"json_produto\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_produto\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_produto}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "2 - ponto de movimentacao destino",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"loja\",",
											"      \"natureza\":\"destino\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm_destino\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "3 - ponto de movimentacao fornecedor",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null;",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString();",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"loja\",",
											"      \"natureza\":\"fornecedor\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm_fornecedor\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "4 - etapa pedido",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _etapa_sug = []",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_etapa_sug.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo,",
											"        \"nome\": \"Pedido\",",
											"        \"descricao\": \"Etapa de pedido\",",
											"        \"tipo_documento\": \"ordem_abastecimento\",",
											"        \"tipo\": \"pedido\",",
											"        \"posicao\": 2,",
											"        \"duracao\": 2,",
											"        \"dias_uteis\": false",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_etapa_ped\", JSON.stringify(_etapa_sug));",
											"pm.environment.set(\"codigo_externo_etapa_ped\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/etapas",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_etapa_ped}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "5 - etapas",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/etapas",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "6 - filtrar etapas",
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/etapas?codigo_externo={{codigo_externo_etapa_ped}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"etapas"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_etapa_ped}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "7 - filtrar etapas por valor errado",
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/etapas?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"etapas"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "8 - filtrar etapas por atributo errado",
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/etapas?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"etapas"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "9 - ordenar etapas",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/etapas?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"etapas"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "10 - ordenar de forma decrescente etapas",
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/etapas?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"etapas"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "11 - ordenar etapas por atributo errado",
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/etapas?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"etapas"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "12 - deslocar etapas",
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/etapas?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"etapas"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "13 - limitar etapas",
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/etapas?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"etapas"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "14 - produto no pdm destino",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_destino}}/produtos/{{codigo_externo_produto}}",
								"method": "LINK",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "15 - produto no pdm fornecedor",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/produtos/{{codigo_externo_produto}}",
								"method": "LINK",
								"header": [
									{
										"description": "",
										"key": "token",
										"value": "{{token}}"
									},
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "16 - cadeia logistica (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _cadeia_logistica = [];",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_pdm_destino = pm.environment.get(\"codigo_externo_pdm_destino\");",
											"var _codigo_externo_pdm_fornecedor = pm.environment.get(\"codigo_externo_pdm_fornecedor\");",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_cadeia_logistica.push(",
											"    {",
											"         \"codigo_externo\": _codigo_externo,",
											"         \"lead_time\": 10,",
											"         \"ativo\": true,",
											"         \"cliente\": {",
											"             \"codigo_externo\": _codigo_externo_pdm_destino",
											"         },",
											"         \"fornecedor\": {",
											"             \"codigo_externo\": _codigo_externo_pdm_fornecedor",
											"         },",
											"         \"portifolio\": [",
											"            {",
											"                \"codigo_externo\": _codigo_externo_produto",
											"            }",
											"         ]",
											"     }",
											")",
											"",
											"pm.environment.set(\"json_cadeia_logistica\", JSON.stringify(_cadeia_logistica));",
											"pm.environment.set(\"codigo_externo_cadeia_logistica\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_cadeia_logistica}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "17 - fluxos de abastecimento (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _fluxo_abastecimento = [];",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _data_etapa = '20180101';",
											"var _codigo_externo_pdm_destino = pm.environment.get(\"codigo_externo_pdm_destino\");",
											"var _codigo_externo_pdm_fornecedor = pm.environment.get(\"codigo_externo_pdm_fornecedor\");",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"var _codigo_externo_etapa = pm.environment.get(\"codigo_externo_etapa_ped\");",
											"",
											"_fluxo_abastecimento.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"duracao_estoque\": 10,",
											"        \"lead_time\": 10,",
											"        \"ativo\": true,",
											"        \"fornecedor\":{",
											"            \"codigo_externo\": _codigo_externo_pdm_fornecedor",
											"        },",
											"        \"solicitante\":{",
											"            \"codigo_externo\": _codigo_externo_pdm_destino",
											"        },",
											"        \"etapas\":[",
											"          {",
											"            \"data\": \"2018-01-01T00:00:00Z\",",
											"            \"codigo_externo\": _codigo_externo_etapa",
											"          }]",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"duracao_estoque\": 10,",
											"        \"lead_time\": 10,",
											"        \"ativo\": true,",
											"        \"fornecedor\":{",
											"            \"codigo_externo\": _codigo_externo_pdm_fornecedor",
											"        },",
											"        \"solicitante\":{",
											"            \"codigo_externo\": _codigo_externo_pdm_destino",
											"        },",
											"        \"etapas\":[",
											"          {",
											"            \"data\": \"2018-01-01T00:00:00Z\",",
											"            \"codigo_externo\": _codigo_externo_etapa",
											"          }]",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"duracao_estoque\": 10,",
											"        \"lead_time\": 10,",
											"        \"ativo\": true,",
											"        \"fornecedor\":{",
											"            \"codigo_externo\": _codigo_externo_pdm_fornecedor",
											"        },",
											"        \"solicitante\":{",
											"            \"codigo_externo\": _codigo_externo_pdm_destino",
											"        },",
											"        \"etapas\":[",
											"          {",
											"            \"data\": \"2018-01-01T00:00:00Z\",",
											"            \"codigo_externo\": _codigo_externo_etapa",
											"          }]",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_fluxo_abastecimento\", JSON.stringify(_fluxo_abastecimento));",
											"pm.environment.set(\"codigo_externo_fluxo_abast\", _codigo_externo_1);",
											"pm.environment.set(\"data_etapa_ped\", _data_etapa);"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento?abastecimento_integral=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento"
									],
									"query": [
										{
											"key": "abastecimento_integral",
											"value": "true",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_fluxo_abastecimento}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "18 - fluxos de abastecimento",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/fluxos-abastecimento",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - filtrar fluxos de abastecimento",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento?codigo_externo={{codigo_externo_fluxo_abast}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_fluxo_abast}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "20 - filtrar fluxos de abastecimento por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - filtrar fluxos de abastecimento por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - ordenar fluxos de abastecimento",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - ordenar de forma decrescente fluxos de abastecimento",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - ordenar fluxos de abastecimento por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - deslocar fluxos de abastecimento",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - limitar fluxos de abastecimento",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "27 - fluxos de abastecimento expandir relacionamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"",
											"pm.test(\"The relationship was expanded\", function () {",
											"    pm.expect(_resposta[0].etapas[0]).to.have.property('nome');",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento?expand=etapas",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento"
									],
									"query": [
										{
											"key": "expand",
											"value": "etapas",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "28 - ordens de abastecimento (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _ordens = [];",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"",
											"_ordens.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"representatividade\": \"doc 1\"",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"representatividade\": \"doc 2\"",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"representatividade\": \"doc 3\"",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_ordem\", JSON.stringify(_ordens));",
											"pm.environment.set(\"codigo_externo_ordem\", _codigo_externo_1);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_ordem}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "29 - ordens de abastecimento",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "30 - filtrar ordens de abastecimento",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento?codigo_externo={{codigo_externo_ordem}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_ordem}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "31 - filtrar ordens de abastecimento por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "32 - filtrar ordens de abastecimento por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "33 - ordenar ordens de abastecimento",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "34 - ordenar de forma decrescente ordens de abastecimento",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "35 - ordenar ordens de abastecimento por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "36 - deslocar ordens de abastecimento",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "37 - limitar ordens de abastecimento",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "38 - produtos no fluxo",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/produtos",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "39 - filtrar produtos no fluxo",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/produtos?codigo_externo={{codigo_externo_produto}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"produtos"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_produto}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "40 - filtrar produtos no fluxo por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/produtos?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"produtos"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "41 - filtrar produtos no fluxo por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/produtos?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"produtos"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "42 - ordenar produtos no fluxo",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/produtos?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"produtos"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "43 - ordenar de forma decrescente produtos no fluxo",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/produtos?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"produtos"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "44 - ordenar produtos no fluxo por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/produtos?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"produtos"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "45 - deslocar produtos no fluxo",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/produtos?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"produtos"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "46 - limitar produtos no fluxo",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/produtos?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"produtos"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "47 - produtos no fluxo expandir relacionamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"",
											"pm.test(\"The relationship was expanded\", function () {",
											"    pm.expect(_resposta[0].fluxo_abastecimento).to.have.property('codigo_externo')",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/produtos?expand=fluxo_abastecimento",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"produtos"
									],
									"query": [
										{
											"key": "expand",
											"value": "fluxo_abastecimento",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "48 - ordens por data etapa",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/etapas/{{codigo_externo_etapa_ped}}/{{data_etapa_ped}}/ordens-abastecimento",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "49 - filtrar ordens por data etapa",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1 || _quantidade_registros === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/etapas/{{codigo_externo_etapa_ped}}/{{data_etapa_ped}}/ordens-abastecimento?codigo_externo={{codigo_externo_ordem}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"{{data_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_ordem}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "50 - filtrar ordens por data etapa por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/etapas/{{codigo_externo_etapa_ped}}/{{data_etapa_ped}}/ordens-abastecimento?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"{{data_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "51 - filtrar ordens por data etapa por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/etapas/{{codigo_externo_etapa_ped}}/{{data_etapa_ped}}/ordens-abastecimento?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"{{data_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "52 - ordenar ordens por data etapa",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/etapas/{{codigo_externo_etapa_ped}}/{{data_etapa_ped}}/ordens-abastecimento?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"{{data_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "53 - ordenar de forma decrescente ordens por data etapa",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/etapas/{{codigo_externo_etapa_ped}}/{{data_etapa_ped}}/ordens-abastecimento?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"{{data_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "54 - ordenar ordens por data etapa por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/etapas/{{codigo_externo_etapa_ped}}/{{data_etapa_ped}}/ordens-abastecimento?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"{{data_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "55 - deslocar ordens por data etapa",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/etapas/{{codigo_externo_etapa_ped}}/{{data_etapa_ped}}/ordens-abastecimento?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"{{data_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "56 - limitar ordens por data etapa",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/etapas/{{codigo_externo_etapa_ped}}/{{data_etapa_ped}}/ordens-abastecimento?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"{{data_etapa_ped}}",
										"ordens-abastecimento"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "57 - itens de ordens de abastecimento (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _itens = [];",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_itens.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo,",
											"        \"quantidade\": 10,",
											"        \"valor_unitario\": 20,",
											"        \"produto\": {",
											"            \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"json_item\", JSON.stringify(_itens));",
											"pm.environment.set(\"codigo_externo_item\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento/{{codigo_externo_ordem}}/itens",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_item}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "58 - itens",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento/{{codigo_externo_ordem}}/itens",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "59 - filtrar itens",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento/{{codigo_externo_ordem}}/itens?codigo_externo={{codigo_externo_produto}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento",
										"{{codigo_externo_ordem}}",
										"itens"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_produto}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "60 - filtrar itens por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento/{{codigo_externo_ordem}}/itens?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento",
										"{{codigo_externo_ordem}}",
										"itens"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "61 - filtrar itens por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento/{{codigo_externo_ordem}}/itens?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento",
										"{{codigo_externo_ordem}}",
										"itens"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "62 - ordenar itens",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento/{{codigo_externo_ordem}}/itens?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento",
										"{{codigo_externo_ordem}}",
										"itens"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "63 - ordenar de forma decrescente itens",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento/{{codigo_externo_ordem}}/itens?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento",
										"{{codigo_externo_ordem}}",
										"itens"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "64 - ordenar itens por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento/{{codigo_externo_ordem}}/itens?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento",
										"{{codigo_externo_ordem}}",
										"itens"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "65 - deslocar itens",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento/{{codigo_externo_ordem}}/itens?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento",
										"{{codigo_externo_ordem}}",
										"itens"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "66 - limitar itens",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento/{{codigo_externo_ordem}}/itens?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento",
										"{{codigo_externo_ordem}}",
										"itens"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "67 - itens expandir relacionamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"",
											"pm.test(\"The relationship was expanded\", function () {",
											"    pm.expect(_resposta[0].produto).to.have.property('nome')",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/fluxos-abastecimento/{{codigo_externo_fluxo_abast}}/etapas/{{codigo_externo_etapa_ped}}/ordens-abastecimento/{{codigo_externo_ordem}}/itens?expand=produto",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"fluxos-abastecimento",
										"{{codigo_externo_fluxo_abast}}",
										"etapas",
										"{{codigo_externo_etapa_ped}}",
										"ordens-abastecimento",
										"{{codigo_externo_ordem}}",
										"itens"
									],
									"query": [
										{
											"key": "expand",
											"value": "produto",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Logistica",
					"description": "",
					"item": [
						{
							"name": "autenticar",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _token = pm.response.headers.get(\"token\");",
											"",
											"pm.environment.set(\"token\", _token);",
											"",
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/autenticar",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"description": ""
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "login",
											"type": "text",
											"value": "{{username}}"
										},
										{
											"key": "senha",
											"type": "text",
											"value": "{{password}}"
										}
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "1 - produto",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null;",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString();",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"heineken\",",
											"      \"estoque_minimo\":12.2,",
											"      \"estoque_maximo\":21.3",
											"    }",
											"",
											"pm.environment.set(\"json_produto\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_produto\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/produtos",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_produto}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "2 - ponto de movimentacao destino",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString()",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"loja\",",
											"      \"natureza\":\"destino\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm_destino\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "3 - ponto de movimentacao fornecedor",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = null;",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString();",
											"",
											"_json = {",
											"      \"codigo_externo\":_codigo_externo,",
											"      \"nome\":\"loja\",",
											"      \"natureza\":\"fornecedor\"",
											"    }",
											"",
											"pm.environment.set(\"json_pdm\", JSON.stringify(_json));",
											"pm.environment.set(\"codigo_externo_pdm_fornecedor\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_pdm}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "5 - pontos de movimentacao",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "6 - filtrar pontos de movimentacao",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao?codigo_externo={{codigo_externo_pdm_fornecedor}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_pdm_fornecedor}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "7 - filtrar pontos de movimentacao por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "8 - filtrar pontos de movimentacao por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "9 - ordenar pontos de movimentacao",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - ordenar de forma decrescente produtos na cadeia logistica copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "11 - ordenar pontos de movimentacao por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "12 - deslocar pontos de movimentacao",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "13 - limitar pontos de movimentacao",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "27 - pontos de movimentacao expandir relacionamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"",
											"pm.test(\"The relationship was expanded\", function () {",
											"    pm.expect(_resposta[0].portifolio[0]).to.have.property('codigo_externo');",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao?expand=portifolio",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao"
									],
									"query": [
										{
											"key": "expand",
											"value": "portifolio",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "14 - produto no pdm destino",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_destino}}/produtos/{{codigo_externo_produto}}",
								"method": "LINK",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "15 - produto no pdm fornecedor",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/produtos/{{codigo_externo_produto}}",
								"method": "LINK",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "18 - produtos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/produtos",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - filtrar produtos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/produtos?codigo_externo={{codigo_externo_produto}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"produtos"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_produto}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "20 - filtrar produtos no pdm por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/produtos?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"produtos"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - filtrar produtos no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/produtos?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"produtos"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - ordenar produtos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/produtos?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"produtos"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - ordenar de forma decrescente produtos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/produtos?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"produtos"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - ordenar produtos no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/produtos?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"produtos"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - deslocar produtos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/produtos?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"produtos"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - limitar produtos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/produtos?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"produtos"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "4 - transferencias (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = [];",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"codigo_externo_transferencias\", _codigo_externo_1);",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));",
											"pm.environment.set(\"caderno_data_de\", \"20180101\");",
											"pm.environment.set(\"caderno_data_ate\", \"20180112\");"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-transferencias",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "18 - caderno transferencias no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-transferencias/{{caderno_data_de}}/{{caderno_data_ate}}",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - filtrar caderno transferencias no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-transferencias/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo={{codigo_externo_transferencias}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-transferencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_transferencias}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "20 - filtrar caderno transferencias no pdm por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-transferencias/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-transferencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - filtrar caderno transferencias no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-transferencias/{{caderno_data_de}}/{{caderno_data_ate}}?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-transferencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - ordenar caderno transferencias no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-transferencias/{{caderno_data_de}}/{{caderno_data_ate}}?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-transferencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - ordenar de forma decrescente caderno transferencias no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-transferencias/{{caderno_data_de}}/{{caderno_data_ate}}?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-transferencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - ordenar caderno transferencias no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-transferencias/{{caderno_data_de}}/{{caderno_data_ate}}?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-transferencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - deslocar caderno transferencias no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-transferencias/{{caderno_data_de}}/{{caderno_data_ate}}?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-transferencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - limitar caderno transferencias no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-transferencias/{{caderno_data_de}}/{{caderno_data_ate}}?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-transferencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "27 - caderno transferencias no pdm expandir relacionamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"",
											"pm.test(\"The relationship was expanded\", function () {",
											"    pm.expect(_resposta[0].proprietario).to.have.property('codigo_externo');",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-transferencias/{{caderno_data_de}}/{{caderno_data_ate}}?expand=proprietario",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-transferencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "proprietario",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "5 - vendas (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = [];",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"codigo_externo_vendas\", _codigo_externo_1);",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-vendas",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "18 - caderno vendas no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-vendas/{{caderno_data_de}}/{{caderno_data_ate}}",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - filtrar caderno vendas no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-vendas/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo={{codigo_externo_vendas}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-vendas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_vendas}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "20 - filtrar caderno vendas no pdm por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-vendas/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-vendas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - filtrar caderno vendas no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-vendas/{{caderno_data_de}}/{{caderno_data_ate}}?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-vendas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - ordenar caderno vendas no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-vendas/{{caderno_data_de}}/{{caderno_data_ate}}?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-vendas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - ordenar de forma decrescente caderno vendas no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-vendas/{{caderno_data_de}}/{{caderno_data_ate}}?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-vendas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - ordenar caderno vendas no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-vendas/{{caderno_data_de}}/{{caderno_data_ate}}?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-vendas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - deslocar caderno vendas no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-vendas/{{caderno_data_de}}/{{caderno_data_ate}}?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-vendas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - limitar caderno vendas no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-vendas/{{caderno_data_de}}/{{caderno_data_ate}}?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-vendas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "27 - caderno vendas no pdm expandir relacionamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"",
											"pm.test(\"The relationship was expanded\", function () {",
											"    pm.expect(_resposta[0].proprietario).to.have.property('codigo_externo');",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-vendas/{{caderno_data_de}}/{{caderno_data_ate}}?expand=proprietario",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-vendas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "proprietario",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "6 - recebimentos (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = [];",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"codigo_externo_recebimentos\", _codigo_externo_1);",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-recebimentos",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "18 - caderno recebimentos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-recebimentos/{{caderno_data_de}}/{{caderno_data_ate}}",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - filtrar caderno recebimentos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-recebimentos/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo={{codigo_externo_recebimentos}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-recebimentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_recebimentos}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "20 - filtrar caderno recebimentos no pdm por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-recebimentos/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-recebimentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - filtrar caderno recebimentos no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-recebimentos/{{caderno_data_de}}/{{caderno_data_ate}}?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-recebimentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - ordenar caderno recebimentos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-recebimentos/{{caderno_data_de}}/{{caderno_data_ate}}?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-recebimentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - ordenar de forma decrescente caderno recebimentos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-recebimentos/{{caderno_data_de}}/{{caderno_data_ate}}?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-recebimentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - ordenar caderno recebimentos no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-recebimentos/{{caderno_data_de}}/{{caderno_data_ate}}?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-recebimentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - deslocar caderno recebimentos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-recebimentos/{{caderno_data_de}}/{{caderno_data_ate}}?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-recebimentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - limitar caderno recebimentos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-recebimentos/{{caderno_data_de}}/{{caderno_data_ate}}?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-recebimentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "27 - caderno recebimentos no pdm expandir relacionamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"",
											"pm.test(\"The relationship was expanded\", function () {",
											"    pm.expect(_resposta[0].proprietario).to.have.property('codigo_externo');",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-recebimentos/{{caderno_data_de}}/{{caderno_data_ate}}?expand=proprietario",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-recebimentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "proprietario",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "7 - fechamentos estoque (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"codigo_externo_fechamentos\", _codigo_externo_1);",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-fechamentos",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "18 - caderno fechamentos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-fechamentos/{{caderno_data_de}}/{{caderno_data_ate}}",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - filtrar caderno fechamentos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-fechamentos/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo={{codigo_externo_fechamentos}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-fechamentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_fechamentos}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "20 - filtrar caderno fechamentos no pdm por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-fechamentos/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-fechamentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - filtrar caderno fechamentos no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-fechamentos/{{caderno_data_de}}/{{caderno_data_ate}}?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-fechamentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - ordenar caderno fechamentos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-fechamentos/{{caderno_data_de}}/{{caderno_data_ate}}?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-fechamentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - ordenar de forma decrescente caderno fechamentos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-fechamentos/{{caderno_data_de}}/{{caderno_data_ate}}?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-fechamentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - ordenar caderno fechamentos no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-fechamentos/{{caderno_data_de}}/{{caderno_data_ate}}?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-fechamentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - deslocar caderno fechamentos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-fechamentos/{{caderno_data_de}}/{{caderno_data_ate}}?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-fechamentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - limitar caderno fechamentos no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-fechamentos/{{caderno_data_de}}/{{caderno_data_ate}}?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-fechamentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "27 - caderno fechamentos no pdm expandir relacionamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"",
											"pm.test(\"The relationship was expanded\", function () {",
											"    pm.expect(_resposta[0].proprietario).to.have.property('codigo_externo');",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-fechamentos/{{caderno_data_de}}/{{caderno_data_ate}}?expand=proprietario",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-fechamentos",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "proprietario",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "8 - ajustes (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"codigo_externo_ajustes\", _codigo_externo_1);",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-ajustes",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "18 - caderno ajustes no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-ajustes/{{caderno_data_de}}/{{caderno_data_ate}}",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - filtrar caderno ajustes no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-ajustes/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo={{codigo_externo_ajustes}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-ajustes",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_ajustes}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "20 - filtrar caderno ajustes no pdm por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-ajustes/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-ajustes",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - filtrar caderno ajustes no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-ajustes/{{caderno_data_de}}/{{caderno_data_ate}}?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-ajustes",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - ordenar caderno ajustes no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-ajustes/{{caderno_data_de}}/{{caderno_data_ate}}?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-ajustes",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - ordenar de forma decrescente caderno ajustes no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-ajustes/{{caderno_data_de}}/{{caderno_data_ate}}?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-ajustes",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - ordenar caderno ajustes no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-ajustes/{{caderno_data_de}}/{{caderno_data_ate}}?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-ajustes",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - deslocar caderno ajustes no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-ajustes/{{caderno_data_de}}/{{caderno_data_ate}}?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-ajustes",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - limitar caderno ajustes no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-ajustes/{{caderno_data_de}}/{{caderno_data_ate}}?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-ajustes",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "27 - caderno ajustes no pdm expandir relacionamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"",
											"pm.test(\"The relationship was expanded\", function () {",
											"    pm.expect(_resposta[0].proprietario).to.have.property('codigo_externo');",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-ajustes/{{caderno_data_de}}/{{caderno_data_ate}}?expand=proprietario",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-ajustes",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "proprietario",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "9 - perdas (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"codigo_externo_perdas\", _codigo_externo_1);",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-perdas",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "18 - caderno perdas no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-perdas/{{caderno_data_de}}/{{caderno_data_ate}}",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - filtrar caderno perdas no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-perdas/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo={{codigo_externo_perdas}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-perdas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_perdas}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "20 - filtrar caderno perdas no pdm por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-perdas/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-perdas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - filtrar caderno perdas no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-perdas/{{caderno_data_de}}/{{caderno_data_ate}}?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-perdas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - ordenar caderno perdas no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-perdas/{{caderno_data_de}}/{{caderno_data_ate}}?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-perdas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - ordenar de forma decrescente caderno perdas no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-perdas/{{caderno_data_de}}/{{caderno_data_ate}}?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-perdas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - ordenar caderno perdas no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-perdas/{{caderno_data_de}}/{{caderno_data_ate}}?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-perdas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - deslocar caderno perdas no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-perdas/{{caderno_data_de}}/{{caderno_data_ate}}?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-perdas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - limitar caderno perdas no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-perdas/{{caderno_data_de}}/{{caderno_data_ate}}?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-perdas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "27 - caderno perdas no pdm expandir relacionamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"",
											"pm.test(\"The relationship was expanded\", function () {",
											"    pm.expect(_resposta[0].proprietario).to.have.property('codigo_externo');",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-perdas/{{caderno_data_de}}/{{caderno_data_ate}}?expand=proprietario",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-perdas",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "proprietario",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "10 - pendencias (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _json = []",
											"var _codigo_externo_1 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_2 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_3 = Math.floor(Math.random() * 1478924138942321123).toString()",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_json.push(",
											"    {",
											"        \"codigo_externo\": _codigo_externo_1,",
											"        \"data\": \"2018-01-01\",",
											"        \"valor\": 10,",
											"        \"quantidade\": 20,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_2,",
											"        \"data\": \"2018-01-11\",",
											"        \"valor\": 5,",
											"        \"quantidade\": 25,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    },",
											"    {",
											"        \"codigo_externo\": _codigo_externo_3,",
											"        \"data\": \"2018-02-12\",",
											"        \"valor\": 15,",
											"        \"quantidade\": 5,",
											"        \"unidade_medida\": \"kg\",",
											"        \"produto\":{",
											"           \"codigo_externo\": _codigo_externo_produto",
											"        }",
											"    }",
											")",
											"",
											"pm.environment.set(\"codigo_externo_pendencias\", _codigo_externo_1);",
											"pm.environment.set(\"json_anotacao\", JSON.stringify(_json));"
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-pendencias",
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_anotacao}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "18 - caderno pendencias no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-pendencias/{{caderno_data_de}}/{{caderno_data_ate}}",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - filtrar caderno pendencias no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-pendencias/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo={{codigo_externo_pendencias}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-pendencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_pendencias}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "20 - filtrar caderno pendencias no pdm por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-pendencias/{{caderno_data_de}}/{{caderno_data_ate}}?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-pendencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - filtrar caderno pendencias no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-pendencias/{{caderno_data_de}}/{{caderno_data_ate}}?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-pendencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - ordenar caderno pendencias no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-pendencias/{{caderno_data_de}}/{{caderno_data_ate}}?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-pendencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - ordenar de forma decrescente caderno pendencias no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-pendencias/{{caderno_data_de}}/{{caderno_data_ate}}?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-pendencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - ordenar caderno pendencias no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-pendencias/{{caderno_data_de}}/{{caderno_data_ate}}?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-pendencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - deslocar caderno pendencias no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-pendencias/{{caderno_data_de}}/{{caderno_data_ate}}?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-pendencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - limitar caderno pendencias no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-pendencias/{{caderno_data_de}}/{{caderno_data_ate}}?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-pendencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "27 - caderno pendencias no pdm expandir relacionamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"",
											"pm.test(\"The relationship was expanded\", function () {",
											"    pm.expect(_resposta[0].proprietario).to.have.property('codigo_externo');",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/caderno-pendencias/{{caderno_data_de}}/{{caderno_data_ate}}?expand=proprietario",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"caderno-pendencias",
										"{{caderno_data_de}}",
										"{{caderno_data_ate}}"
									],
									"query": [
										{
											"key": "expand",
											"value": "proprietario",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "16 - cadeia logistica (lote)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											""
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _cadeia_logistica = [];",
											"var _codigo_externo = Math.floor(Math.random() * 1478924138942321123).toString();",
											"var _codigo_externo_pdm_destino = pm.environment.get(\"codigo_externo_pdm_destino\");",
											"var _codigo_externo_pdm_fornecedor = pm.environment.get(\"codigo_externo_pdm_fornecedor\");",
											"var _codigo_externo_produto = pm.environment.get(\"codigo_externo_produto\");",
											"",
											"_cadeia_logistica.push(",
											"    {",
											"         \"codigo_externo\": _codigo_externo,",
											"         \"lead_time\": 10,",
											"         \"ativo\": true,",
											"         \"cliente\": {",
											"             \"codigo_externo\": _codigo_externo_pdm_destino",
											"         },",
											"         \"fornecedor\": {",
											"             \"codigo_externo\": _codigo_externo_pdm_fornecedor",
											"         }",
											"     }",
											")",
											"",
											"pm.environment.set(\"json_cadeia_logistica\", JSON.stringify(_cadeia_logistica));",
											"pm.environment.set(\"codigo_externo_cadeia_logistica\", _codigo_externo);"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos?portifolio_integral=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos"
									],
									"query": [
										{
											"key": "portifolio_integral",
											"value": "true",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "POST",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{json_cadeia_logistica}}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "18 - cadeia logistica no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.expect(_resposta[0].portifolio_integral === true).to.equal(true) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - filtrar cadeia logistica no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos?codigo_externo={{codigo_externo_cadeia_logistica}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_cadeia_logistica}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "20 - filtrar cadeia logistica no pdm por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - filtrar cadeia logistica no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - ordenar cadeia logistica no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - ordenar de forma decrescente cadeia logistica no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - ordenar cadeia logistica no pdm por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - deslocar cadeia logistica no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - limitar cadeia logistica no pdm",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "27 - cadeia logistica no pdm expandir relacionamentos",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _resposta = JSON.parse(responseBody);",
											"",
											"pm.test(\"The relationship was expanded\", function () {",
											"    pm.expect(_resposta[0].fornecedor).to.have.property('codigo_externo');",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos?expand=fornecedor",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos"
									],
									"query": [
										{
											"key": "expand",
											"value": "fornecedor",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "18 - produtos na cadeia logistica",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"quantidade_registros\", JSON.parse(responseBody).length);",
											"pm.environment.set(\"deslocamento\", 1);",
											"pm.environment.set(\"limite\", 1);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos/{{codigo_externo_cadeia_logistica}}/produtos",
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "19 - filtrar cadeia logistica no pdm copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = JSON.parse(responseBody).length;",
											"",
											"pm.test(\"Must bring only one records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros === 1) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos/{{codigo_externo_cadeia_logistica}}/produtos?codigo_externo={{codigo_externo_produto}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos",
										"{{codigo_externo_cadeia_logistica}}",
										"produtos"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "{{codigo_externo_produto}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "20 - filtrar produtos na cadeia logistica  por valor errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((JSON.parse(responseBody).length === 0) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos/{{codigo_externo_cadeia_logistica}}/produtos?codigo_externo=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos",
										"{{codigo_externo_cadeia_logistica}}",
										"produtos"
									],
									"query": [
										{
											"key": "codigo_externo",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "21 - filtrar produtos na cadeia logistica por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only \" + _quantidade_registros + \" records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos/{{codigo_externo_cadeia_logistica}}/produtos?abc=!@",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos",
										"{{codigo_externo_cadeia_logistica}}",
										"produtos"
									],
									"query": [
										{
											"key": "abc",
											"value": "!@",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "22 - ordenar produtos na cadeia logistica",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos/{{codigo_externo_cadeia_logistica}}/produtos?sort=codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos",
										"{{codigo_externo_cadeia_logistica}}",
										"produtos"
									],
									"query": [
										{
											"key": "sort",
											"value": "codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "23 - ordenar de forma decrescente produtos na cadeia logistica",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos/{{codigo_externo_cadeia_logistica}}/produtos?sort=-codigo_externo",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos",
										"{{codigo_externo_cadeia_logistica}}",
										"produtos"
									],
									"query": [
										{
											"key": "sort",
											"value": "-codigo_externo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "24 - ordenar produtos na cadeia logistica por atributo errado",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"",
											"pm.test(\"Must bring only zero records per code and status code must be 200\", function () {",
											"    pm.expect((_quantidade_registros == JSON.parse(responseBody).length) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos/{{codigo_externo_cadeia_logistica}}/produtos?sort=abc",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos",
										"{{codigo_externo_cadeia_logistica}}",
										"produtos"
									],
									"query": [
										{
											"key": "sort",
											"value": "abc",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "25 - deslocar produtos na cadeia logistica",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _quantidade_registros = pm.environment.get(\"quantidade_registros\");",
											"var _deslocamento = pm.environment.get(\"deslocamento\");",
											"var _diferenca_de_registros = (_quantidade_registros - JSON.parse(responseBody).length);",
											"",
											"pm.test(\"Displacement of records equal to 1\", function () {",
											"    pm.expect((_diferenca_de_registros == _deslocamento) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos/{{codigo_externo_cadeia_logistica}}/produtos?offset={{deslocamento}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos",
										"{{codigo_externo_cadeia_logistica}}",
										"produtos"
									],
									"query": [
										{
											"key": "offset",
											"value": "{{deslocamento}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "26 - limitar produtos na cadeia logistica",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var _limite = pm.environment.get(\"limite\");",
											"",
											"pm.test(\"Limit of records equal to 1\", function () {",
											"    pm.expect((JSON.parse(responseBody).length == _limite) && responseCode.code === 200).to.equal(true);",
											"});",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "{{url}}/sirius/{{versao}}/pontos-movimentacao/{{codigo_externo_pdm_fornecedor}}/cadeias-suprimentos/{{codigo_externo_cadeia_logistica}}/produtos?limit={{limite}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"sirius",
										"{{versao}}",
										"pontos-movimentacao",
										"{{codigo_externo_pdm_fornecedor}}",
										"cadeias-suprimentos",
										"{{codigo_externo_cadeia_logistica}}",
										"produtos"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{limite}}",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{token}}",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}